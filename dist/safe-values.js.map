{"version":3,"sources":["safe-values.js"],"names":["isset","value","undefined","NaN","isint","isstring","isbool","isfunc","toString","call","isarray","Array","isArray","isobj","constructor","Object","objhas","object","values","forEach","isenum","enumValues","includes"],"mappings":";AAmDC,aAlDM,SAASA,EAAMC,GACXA,OAASC,MAATD,GAA+BE,KAATF,EAI1B,SAASG,EAAMH,GACXD,OAAAA,EAAMC,IAA0B,iBAATA,EAI3B,SAASI,EAASJ,GACdD,OAAAA,EAAMC,IAA0B,iBAATA,EAI3B,SAASK,EAAOL,GACZD,OAAAA,EAAMC,IAA0B,kBAATA,EAI3B,SAASM,EAAON,GACZD,OAAAA,EAAMC,IAAsC,sBAA5B,GAAGO,SAASC,KAAKR,GAIrC,SAASS,EAAQT,GACbD,OAAAA,EAAMC,IAAUU,MAAMC,QAAQX,GAIlC,SAASY,EAAMZ,GACXD,OAAAA,EAAMC,IAAUA,EAAMa,aAAeC,OAIzC,SAASC,EAAOC,EAAQC,GACxB,SAAClB,EAAMiB,IAAYjB,EAAMkB,IAAYL,EAAMI,MAE9CC,EAAOC,QAAQ,SAAAlB,GACR,KAAEA,KAASgB,GACV,OAAO,KAGR,GAIJ,SAASG,EAAOnB,EAAOoB,GACnBrB,OAAAA,EAAMC,IAAUD,EAAMqB,IACtBX,EAAQW,IAAeA,EAAWC,SAASrB,GACrD,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,MAAA,EAAA,QAAA,MAAA,EAAA,QAAA,SAAA,EAAA,QAAA,OAAA,EAAA,QAAA,OAAA,EAAA,QAAA,QAAA,EAAA,QAAA,MAAA,EAAA,QAAA,OAAA,EAAA,QAAA,OAAA","file":"safe-values.js","sourceRoot":"../src/lib","sourcesContent":["// Check if value is set\nexport function isset(value) {\n    return value != undefined || value != NaN\n}\n\n// Check if value is int/number\nexport function isint(value) {\n    return isset(value) && typeof value == 'number'\n}\n\n// Check if value is string\nexport function isstring(value) {\n    return isset(value) && typeof value == 'string'\n}\n\n// Check if value is bool\nexport function isbool(value) {\n    return isset(value) && typeof value == 'boolean'\n}\n\n// Check if value is function\nexport function isfunc(value) {\n    return isset(value) && {}.toString.call(value) === '[object Function]'\n}\n\n// Check if value is array\nexport function isarray(value) {\n    return isset(value) && Array.isArray(value)\n}\n\n// Check if value is object (key/value dictionary)\nexport function isobj(value) {\n    return isset(value) && value.constructor == Object\n}\n\n// Check if object has every field/key\nexport function objhas(object, values) {\n    if(!isset(object) || !isset(values) || !isobj(object)) return false\n\n    values.forEach(value => {\n        if(!(value in object))\n            return false\n    })\n\n    return true\n}\n\n// Check if value is enum value\nexport function isenum(value, enumValues) {\n    return isset(value) && isset(enumValues) \n        && isarray(enumValues) && enumValues.includes(value)\n}"]}